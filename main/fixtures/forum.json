[{"fields":{"name":"Các kì thi trực tuyến","created_by":1},"model":"forum.forumgroup","pk":1},{"fields":{"name":"Online Judge","created_by":1},"model":"forum.forumgroup","pk":2},{"fields":{"name":"Thảo luận chung","created_by":1},"model":"forum.forumgroup","pk":3},{"fields":{"name":"Trò chuyện linh tinh","created_by":1},"model":"forum.forumgroup","pk":4},{"fields":{"name":"Library - Algo","created_by":1},"model":"forum.forumgroup","pk":5},{"fields":{"name":"Library - Machine Learning","created_by":1},"model":"forum.forumgroup","pk":6},{"fields":{"num_topics":2,"created_at":"2015-03-01T09:28:52.071Z","forum_group":1,"created_by":1,"num_posts":7,"desc":"Codeforces desc","last_post":7,"name":"Codeforces"},"model":"forum.forum","pk":1},{"fields":{"num_topics":0,"created_at":"2015-03-01T09:29:14.550Z","forum_group":1,"created_by":1,"num_posts":0,"desc":"Topcoder desc","last_post":null,"name":"Topcoder"},"model":"forum.forum","pk":2},{"fields":{"num_topics":0,"created_at":"2015-03-01T09:30:36.581Z","forum_group":2,"created_by":1,"num_posts":0,"desc":"VOJ desc","last_post":null,"name":"VOJ"},"model":"forum.forum","pk":3},{"fields":{"num_topics":0,"created_at":"2015-03-01T09:30:52.348Z","forum_group":2,"created_by":1,"num_posts":0,"desc":"SPOJ desc","last_post":null,"name":"SPOJ"},"model":"forum.forum","pk":4},{"fields":{"num_topics":0,"created_at":"2015-03-01T09:31:09.933Z","forum_group":3,"created_by":1,"num_posts":0,"desc":"Thuật toán desc","last_post":null,"name":"Thuật toán "},"model":"forum.forum","pk":5},{"fields":{"num_topics":0,"created_at":"2015-03-01T09:31:29.903Z","forum_group":3,"created_by":1,"num_posts":0,"desc":"Machine Learning desc","last_post":null,"name":"Machine Learning"},"model":"forum.forum","pk":6},{"fields":{"num_topics":0,"created_at":"2015-03-01T09:31:43.216Z","forum_group":4,"created_by":1,"num_posts":0,"desc":"Quảng cáo desc","last_post":null,"name":"Quảng cáo"},"model":"forum.forum","pk":7},{"fields":{"num_topics":1,"created_at":"2015-03-21T08:24:40.234Z","forum_group":5,"created_by":1,"num_posts":1,"desc":"Tổng hợp các bài viết về cấu trúc dữ liệu","last_post":8,"name":"Cấu trúc dữ liệu"},"model":"forum.forum","pk":8},{"fields":{"updated_by":1,"forum":1,"title":"CF Round 294","created_at":"2015-03-01T09:33:23.475Z","updated_at":"2015-03-19T18:18:00.427Z","created_by":1,"content":"<p>Hôm nay 11h30 thi Codeforce nhé!!!</p>\n\n<ul>\n\t<li>bla</li>\n\t<li>bla\n\t<ol>\n\t\t<li>ok</li>\n\t\t<li>abc</li>\n\t</ol>\n\t</li>\n</ul>\n\n<p><strong>hihi</strong></p>\n\n<p><em>haha</em></p>\n","num_posts":4,"post":1,"last_post":4},"model":"forum.topic","pk":1},{"fields":{"updated_by":2,"forum":1,"title":"Codeforce 294 Bài E","created_at":"2015-03-01T09:40:06.479Z","updated_at":"2015-03-19T18:18:54.577Z","created_by":2,"content":"<p>Bài này làm thế nào hả các bạn :(</p>\n\n<p><a href=\"http://codeforces.com/contest/519/problem/E\">http://codeforces.com/contest/519/problem/E</a></p>\n\n<pre><code class=\"language-python\">def ok(abc):\n    return 'OK'</code></pre>\n\n<p> </p>\n","num_posts":3,"post":5,"last_post":7},"model":"forum.topic","pk":2},{"fields":{"updated_by":1,"forum":8,"title":"Persistent Data Structures","created_at":null,"updated_at":"2015-03-21T08:28:54.966Z","created_by":1,"content":"<p><strong>1. Mở đầu</strong></p>\n\n<p>Persistent Data Structures là những cấu trúc dữ liệu được dùng khi chúng ta cần có \"toàn bộ lịch sử\" của các thay đổi trên 1 cấu trúc dữ liệu. (Chú ý rằng từ \"persistent\" còn được dùng trong \"persistent storage\" với một nghĩa hoàn toàn khác).</p>\n\n<p>Xét bài toán ví dụ:</p>\n\n<ul>\n\t<li>Cho một dãy A gồm N phần tử.</li>\n\t<li>Có 2 loại truy vấn:\n\t<ul>\n\t\t<li>Update: Gán Ai = v</li>\n\t\t<li>Query: Tìm min(Ai, ..., Aj) tại thời điểm sau phép gán thứ K.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Nếu không có đoạn \"tại thời điểm sau phép gán thứ K\", bài toán là 1 bài cơ bản trên Interval Tree (Segment Tree). Đoạn \"tại thời điểm sau phép gán thứ K\" buộc chúng ta phải lưu lại các thông tin về lịch sử cập nhật CTDL - đây chính là tư tưởng của Persistent Data Structures.</p>\n\n<p>Gọi trạng thái của CTDL tại một thời điểm là 1 version của CTDL đó. Một cách cụ thể hơn, persistent data structures cho phép chúng ta:</p>\n\n<ul>\n\t<li>Truy vấn trên một version cũ của CTDL</li>\n\t<li>Cập nhật dữ liệu trong version mới nhất của CTDL, bằng cách tạo thêm 1 version mới của CTDL.\n\t<ul>\n\t\t<li>Trong một số cách cài đặt, Persistent Data Structures còn có thể cho phép thay version hiện tại của CTDL thành một version trong quá khứ (phần 2 mô tả phương pháp cài đặt có thể thực hiện được thao tác này).</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Cần hiểu rằng Persistent Data Structures không phải là một loại CTDL mới. Nó là một số kĩ năng tổng quát giúp thêm thông tin về lịch sử thay đổi vào CTDL thông thường <strong>một cách hiệu quả</strong>. Ví dụ:</p>\n\n<ul>\n\t<li>IT + Persistent trick --&gt; Persistent IT</li>\n\t<li>BIT + Persistent trick --&gt; Persistent BIT</li>\n</ul>\n\n<p>Tại sao lại là \"một cách hiệu quả\"? Bởi vì ta hoàn toàn có thể có một Persistent Data Structures bằng cách: khi cập nhật, ta tạo một bản sao hoàn toàn mới của CTDL, thay đổi một số dữ liệu trên nó và lưu lại. Như vậy ta luôn có được một thuật toán với độ phức tạp O(Q*N*T) và bộ nhớ O(Q*N), với Q là số thao tác cần thực hiện, và N là độ lớn của CTDL, và T là thời gian để thực hiện thao tác trên CTDL.</p>\n\n<p>Trong các phần dưới đây, mình sẽ trình bày về 2 kĩ thuật thông thường của Persistent Data Structures:</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n","num_posts":1,"post":8,"last_post":8},"model":"forum.topic","pk":3},{"fields":{"content":"<p>Hôm nay 11h30 thi Codeforce nhé!!!</p>\n\n<ul>\n\t<li>bla</li>\n\t<li>bla\n\t<ol>\n\t\t<li>ok</li>\n\t\t<li>abc</li>\n\t</ol>\n\t</li>\n</ul>\n\n<p><strong>hihi</strong></p>\n\n<p><em>haha</em></p>\n","updated_by":1,"created_at":"2015-03-01T09:33:23.487Z","reply_on":null,"updated_at":"2015-03-19T18:18:00.427Z","created_by":1,"topic":1,"num_downvotes":0,"topic_post":true,"num_upvotes":0},"model":"forum.post","pk":1},{"fields":{"content":"comment 1: Ukie con dê ","updated_by":1,"created_at":"2015-03-01T09:37:03.824Z","reply_on":1,"updated_at":"2015-03-01T09:37:03.824Z","created_by":1,"topic":1,"num_downvotes":0,"topic_post":false,"num_upvotes":0},"model":"forum.post","pk":2},{"fields":{"content":"comment 2: Chắc chắn roài !!!","updated_by":1,"created_at":"2015-03-01T09:37:30.140Z","reply_on":1,"updated_at":"2015-03-01T09:37:39.165Z","created_by":1,"topic":1,"num_downvotes":0,"topic_post":false,"num_upvotes":0},"model":"forum.post","pk":3},{"fields":{"content":"comment 1-1: Đồ con dê !!!","updated_by":1,"created_at":"2015-03-01T09:38:32.357Z","reply_on":2,"updated_at":"2015-03-01T09:38:32.357Z","created_by":1,"topic":1,"num_downvotes":0,"topic_post":false,"num_upvotes":0},"model":"forum.post","pk":4},{"fields":{"content":"<p>Bài này làm thế nào hả các bạn :(</p>\n\n<p><a href=\"http://codeforces.com/contest/519/problem/E\">http://codeforces.com/contest/519/problem/E</a></p>\n\n<pre><code class=\"language-python\">def ok(abc):\n    return 'OK'</code></pre>\n\n<p> </p>\n","updated_by":2,"created_at":"2015-03-01T09:40:06.487Z","reply_on":null,"updated_at":"2015-03-19T18:18:54.577Z","created_by":2,"topic":2,"num_downvotes":0,"topic_post":true,"num_upvotes":0},"model":"forum.post","pk":5},{"fields":{"content":"comment 1: Mình chịu, khó quá :(","updated_by":1,"created_at":"2015-03-01T09:40:37.032Z","reply_on":5,"updated_at":"2015-03-01T09:40:47.615Z","created_by":1,"topic":2,"num_downvotes":0,"topic_post":false,"num_upvotes":0},"model":"forum.post","pk":6},{"fields":{"content":"comment 2: Bài dễ thế mà cũng hỏi, đồ con gà :3","updated_by":1,"created_at":"2015-03-01T09:41:37.833Z","reply_on":5,"updated_at":"2015-03-01T09:42:08.549Z","created_by":1,"topic":2,"num_downvotes":0,"topic_post":false,"num_upvotes":0},"model":"forum.post","pk":7},{"fields":{"content":"<p><strong>1. Mở đầu</strong></p>\n\n<p>Persistent Data Structures là những cấu trúc dữ liệu được dùng khi chúng ta cần có \"toàn bộ lịch sử\" của các thay đổi trên 1 cấu trúc dữ liệu. (Chú ý rằng từ \"persistent\" còn được dùng trong \"persistent storage\" với một nghĩa hoàn toàn khác).</p>\n\n<p>Xét bài toán ví dụ:</p>\n\n<ul>\n\t<li>Cho một dãy A gồm N phần tử.</li>\n\t<li>Có 2 loại truy vấn:\n\t<ul>\n\t\t<li>Update: Gán Ai = v</li>\n\t\t<li>Query: Tìm min(Ai, ..., Aj) tại thời điểm sau phép gán thứ K.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Nếu không có đoạn \"tại thời điểm sau phép gán thứ K\", bài toán là 1 bài cơ bản trên Interval Tree (Segment Tree). Đoạn \"tại thời điểm sau phép gán thứ K\" buộc chúng ta phải lưu lại các thông tin về lịch sử cập nhật CTDL - đây chính là tư tưởng của Persistent Data Structures.</p>\n\n<p>Gọi trạng thái của CTDL tại một thời điểm là 1 version của CTDL đó. Một cách cụ thể hơn, persistent data structures cho phép chúng ta:</p>\n\n<ul>\n\t<li>Truy vấn trên một version cũ của CTDL</li>\n\t<li>Cập nhật dữ liệu trong version mới nhất của CTDL, bằng cách tạo thêm 1 version mới của CTDL.\n\t<ul>\n\t\t<li>Trong một số cách cài đặt, Persistent Data Structures còn có thể cho phép thay version hiện tại của CTDL thành một version trong quá khứ (phần 2 mô tả phương pháp cài đặt có thể thực hiện được thao tác này).</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Cần hiểu rằng Persistent Data Structures không phải là một loại CTDL mới. Nó là một số kĩ năng tổng quát giúp thêm thông tin về lịch sử thay đổi vào CTDL thông thường <strong>một cách hiệu quả</strong>. Ví dụ:</p>\n\n<ul>\n\t<li>IT + Persistent trick --&gt; Persistent IT</li>\n\t<li>BIT + Persistent trick --&gt; Persistent BIT</li>\n</ul>\n\n<p>Tại sao lại là \"một cách hiệu quả\"? Bởi vì ta hoàn toàn có thể có một Persistent Data Structures bằng cách: khi cập nhật, ta tạo một bản sao hoàn toàn mới của CTDL, thay đổi một số dữ liệu trên nó và lưu lại. Như vậy ta luôn có được một thuật toán với độ phức tạp O(Q*N*T) và bộ nhớ O(Q*N), với Q là số thao tác cần thực hiện, và N là độ lớn của CTDL, và T là thời gian để thực hiện thao tác trên CTDL.</p>\n\n<p>Trong các phần dưới đây, mình sẽ trình bày về 2 kĩ thuật thông thường của Persistent Data Structures:</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>\n","updated_by":1,"created_at":"2015-03-21T08:25:45.240Z","reply_on":null,"updated_at":"2015-03-21T08:28:54.966Z","created_by":1,"topic":3,"num_downvotes":0,"topic_post":true,"num_upvotes":0},"model":"forum.post","pk":8}]